TARGET_NAME := picodrive
TARGET := $(TARGET_NAME)_libretro_psp1.a
CC = psp-gcc
AS = psp-as
AR = psp-ar




#use_musashi = 1
#use_mz80 = 1

CFLAGS += -I../.. -I. -DNO_SYNC -D_ASM_DRAW_C_AMIPS
CFLAGS += -Wall -Winline -G0


ifeq ($(DEBUG),1)
CFLAGS += -g
OPTIMIZE =  -O0
OPTIMIZE_SAFE = -O0
else
CFLAGS += -ftracer -fstrength-reduce -ffast-math
OPTIMIZE =  -O3
OPTIMIZE_SAFE = -O2
endif



# frontend and stuff
#OBJS += main.o emu.o mp3.o menu.o psp.o asm_utils.o

# common
#OBJS += platform/common/emu.o platform/common/menu.o platform/common/fonts.o platform/common/config.o platform/common/readpng.o
#OBJS += platform/common/input.o

# Pico

OBJS += pico/area.o pico/cart.o pico/memory.o pico/misc.o pico/pico.o pico/sek.o pico/videoport.o \
		pico/draw2.o pico/draw.o pico/patch.o pico/draw_amips.o pico/memory_amips.o \
		pico/misc_amips.o pico/debug.o
# Pico - CD
OBJS += pico/cd/pico.o pico/cd/memory.o pico/cd/sek.o pico/cd/LC89510.o \
		pico/cd/cd_sys.o pico/cd/cd_file.o pico/cd/cue.o pico/cd/gfx_cd.o \
		pico/cd/area.o pico/cd/misc.o pico/cd/pcm.o pico/cd/buffering.o
# Pico - carthw
OBJS += pico/carthw/carthw.o pico/carthw/svp/svp.o pico/carthw/svp/memory.o \
		pico/carthw/svp/ssp16.o
# Pico - Pico
OBJS += pico/pico/pico.o pico/pico/memory.o pico/pico/xpcm.o

# Pico - sound

OBJS += pico/sound/sound.o
#OBJS += platform/psp/mp3.o

OBJS += pico/sound/mix.o
OBJS += pico/sound/sn76496.o pico/sound/ym2612.o

# zlib (hacked)
#OBJS += zlib/gzio.o zlib/inffast.o zlib/inflate.o zlib/inftrees.o zlib/trees.o \
#	zlib/deflate.o zlib/crc32.o zlib/adler32.o zlib/zutil.o zlib/compress.o \
#	zlib/uncompr.o
# unzip
OBJS += unzip/unzip.o unzip/unzip_stream.o
OBJS += zlib/gzio.o

OBJS += libretro.o
CFLAGS += -D__LIBRETRO__ -DNO_MMAP

OBJS_BASE := $(OBJS)

# CPU cores
ifeq "$(use_musashi)" "1"
CFLAGS += -DEMU_M68K
OBJS += cpu/musashi/m68kops.o cpu/musashi/m68kcpu.o
else
CFLAGS += -DEMU_F68K
OBJS += cpu/fame/famec.o
endif

# z80
ifeq "$(use_mz80)" "1"
CFLAGS += -D_USE_MZ80
OBJS += cpu/mz80/mz80.o
else
CFLAGS += -D_USE_CZ80
OBJS += cpu/cz80/cz80.o
endif


INCDIRS  = -I. -Iplatform/psp
INCDIRS += -I$(shell psp-config --pspsdk-path)/include
#-Iplatform -Iplatform/psp -Iplatform/common -Ipico -Ipico/cd -Ipico/pico -Ipico/sound -Ipico/carthw/svp -Izlib -Iunzip -Icpu -Icpu/musashi -Icpu/fame -Icpu/mz80 -Icpu/cz80

KU_OBJS  = KUBridge_0000.o KUBridge_0001.o KUBridge_0002.o KUBridge_0003.o KUBridge_0004.o KUBridge_0005.o KUBridge_0006.o KUBridge_0007.o KUBridge_0008.o KUBridge_0009.o KUBridge_0010.o KUBridge_0011.o KUBridge_0012.o KUBridge_0013.o KUBridge_0014.o KUBridge_0015.o KUBridge_0016.o KUBridge_0017.o
INCDIRS += -Iplatform/psp/SDK
OBJS += $(KU_OBJS)


CFLAGS += $(INCDIRS)
#LIBS += -lpng -lm -lpspgu -lpsppower -lpspaudio -lpsprtc -lpspaudiocodec -lpspkubridge

all: $(TARGET)

$(TARGET): $(OBJS)
		$(AR) rcs $@ $(OBJS)

.c.o:
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@


.s.o:
	@echo ">>>" $<
	$(AS) -march=allegrex -mtune=allegrex $< -o $@

cpu/musashi/m68kops.c :
	make -C cpu/musashi

cpu/fame/famec.o : cpu/fame/famec.c
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE_SAFE) -Wno-unused -c $< -o $@

pico/misc.o : pico/misc.c
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@ -D_ASM_MISC_C_AMIPS

pico/memory.o : pico/memory.c
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@ -D_ASM_MEMORY_C -D_ASM_MEMORY_C_AMIPS

pico/cd/memory.o : pico/cd/memory.c
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@

pico/cd/gfx_cd.o : pico/cd/gfx_cd.c
	@echo ">>>" $<
	$(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@

readme.txt: tools/textfilter ../base_readme.txt
	tools/textfilter ../base_readme.txt $@ PSP

tools/textfilter: tools/textfilter.c
	make -C tools/ textfilter

data/bg32.o: data/bg32.bin
	bin2o -i $< $@ bgdatac32

data/bg40.o: data/bg40.bin
	bin2o -i $< $@ bgdatac40

vpath %.S = platform/psp/SDK
$(KU_OBJS): KUBridge.S
	$(CC) $(CFLAGS) -DF_$* $< -c -o $@

clean:
#	$(RM) $(TARGET) $(OBJS_BASE)
	$(RM) $(TARGET) $(OBJS)

